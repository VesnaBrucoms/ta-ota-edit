<Window x:Class="OTAEdit.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OTAEdit"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:control="clr-namespace:OTAEdit.Views.Controls"
        xmlns:viewmodel="clr-namespace:OTAEdit.ViewModels"
        mc:Ignorable="d"
        Title="{Binding Path=GetWindowTitle, Mode=OneWay}" UseLayoutRounding="True" MinHeight="675" Height="800" MinWidth="800" Width="1000">
    <Window.Resources>
        <Style x:Key="GreyableImage" TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Image x:Key="NewFileMenu" Style="{StaticResource GreyableImage}" Source="pack://application:,,,/Resources/NewFile_16x.png" />
        <Image x:Key="OpenFolderMenu" Style="{StaticResource GreyableImage}" Source="pack://application:,,,/Resources/OpenFolder_16x.png" />
        <Image x:Key="SaveMenu" Style="{StaticResource GreyableImage}" Source="pack://application:,,,/Resources/Save_16x.png" />
        <Image x:Key="HelpMenu" Style="{StaticResource GreyableImage}" Source="pack://application:,,,/Resources/StatusHelp_16x.png" />

        <Image x:Key="NewFileToolbar" Style="{StaticResource GreyableImage}" Source="pack://application:,,,/Resources/NewFile_16x.png" />
        <Image x:Key="OpenFolderToolbar" Style="{StaticResource GreyableImage}" Source="pack://application:,,,/Resources/OpenFolder_16x.png" />
        <Image x:Key="SaveToolbar" Style="{StaticResource GreyableImage}" Source="pack://application:,,,/Resources/Save_16x.png" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding Path=NewOTACommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding Path=OpenOTACommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding Path=SaveOTACommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{Binding Path=SaveAsOTACommand}" />
        <KeyBinding Key="F1" Command="{Binding Path=ShowHelpCommand}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Icon="{StaticResource NewFileMenu}" Header="_New" InputGestureText="Ctrl+N" Command="{Binding Path=NewOTACommand}" />
                <MenuItem Icon="{StaticResource OpenFolderMenu}" Header="_Open..." InputGestureText="Ctrl+O" Command="{Binding Path=OpenOTACommand}" />
                <Separator />
                <MenuItem Header="Close" Command="{Binding Path=CloseOTACommand}" />
                <Separator />
                <MenuItem Icon="{StaticResource SaveMenu}" Header="_Save" InputGestureText="Ctrl+S" Command="{Binding Path=SaveOTACommand}" />
                <MenuItem Header="Save As..." InputGestureText="Ctrl+Shift+S" Command="{Binding Path=SaveAsOTACommand}" />
                <Separator />
                <MenuItem Header="_Exit" Click="ApplicationClose_Click" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem x:Name="menuAddUnit" Header="Add Unit..." Command="{Binding Path=AddItemCommand}" CommandParameter="{Binding ElementName=menuAddUnit, Path=Name}" />
                <MenuItem x:Name="menuAddFeature" Header="Add Feature..." Command="{Binding Path=AddItemCommand}" CommandParameter="{Binding ElementName=menuAddFeature, Path=Name}" />
                <MenuItem x:Name="menuAddSpecial" Header="Add Special..." Command="{Binding Path=AddItemCommand}" CommandParameter="{Binding ElementName=menuAddSpecial, Path=Name}" />
                <Separator />
                <MenuItem Header="Mission Settings..." Command="{Binding Path=EditMissionCommand}" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem IsCheckable="True" IsChecked="{Binding Path=IsToolBarChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Tool Bar" />
                <MenuItem IsCheckable="True" IsChecked="{Binding Path=IsStatusBarChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Status Bar" />
                <Separator />
                <MenuItem Header="Toolbars">
                    <MenuItem IsCheckable="True" IsChecked="{Binding Path=IsToolBarStandChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Standard" />
                    <MenuItem IsCheckable="True" IsChecked="{Binding Path=IsToolBarSettingsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Settings" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Icon="{StaticResource HelpMenu}" Header="Help" InputGestureText="F1" Command="{Binding Path=ShowHelpCommand}" />
                <Separator />
                <MenuItem Header="_About OTA Edit" Command="{Binding Path=ShowAboutCommand}" />
            </MenuItem>
        </Menu>
        <ToolBarTray Grid.Row="1" Visibility="{Binding Path=GetToolBarVisibility, Mode=OneWay}">
            <ToolBar Visibility="{Binding Path=GetToolBarStandVisibility, Mode=OneWay}">
                <Button Content="{StaticResource NewFileToolbar}" ToolTip="New File (Ctrl+N)" Command="{Binding Path=NewOTACommand}" />
                <Button Content="{StaticResource OpenFolderToolbar}" ToolTip="Open File (Ctrl+O)" Command="{Binding Path=OpenOTACommand}" />
                <Button Content="{StaticResource SaveToolbar}" ToolTip="Save File (Ctrl+S)" Command="{Binding Path=SaveOTACommand}" />
            </ToolBar>
            <ToolBar Visibility="{Binding Path=GetToolBarSettingsVisibility, Mode=OneWay}">
                <Button x:Name="toolAddUnit" Content="New Unit" Command="{Binding Path=AddItemCommand}" CommandParameter="{Binding ElementName=toolAddUnit, Path=Name}" />
                <Button x:Name="toolAddFeature" Content="New Feature" Command="{Binding Path=AddItemCommand}" CommandParameter="{Binding ElementName=toolAddFeature, Path=Name}" />
                <Button x:Name="toolAddSpecial" Content="New Special" Command="{Binding Path=AddItemCommand}" CommandParameter="{Binding ElementName=toolAddSpecial, Path=Name}" />
                <Separator />
                <Button Content="Mission Settings" Command="{Binding Path=EditMissionCommand}" />
            </ToolBar>
        </ToolBarTray>
        <Grid Margin="5,11,5,5" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" MaxHeight="200" />
                <RowDefinition Height="11" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="15" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Row="0" Grid.Column="0" Header="Map">
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="90" Width="1*" />
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition MinWidth="90" Width="1*" />
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="0.7*" MaxWidth="120" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" />
                    <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" IsEnabled="{Binding Path=IsNotEmpty}" Text="{Binding Path=MapName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Row="0" Grid.Column="4" Text="Players:" />                    
                    <TextBox Grid.Row="1" Grid.Column="4" IsEnabled="{Binding Path=IsNotEmpty}" Text="{Binding Path=NumPlayers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Size:" />
                    <TextBox Grid.Row="4" Grid.Column="0" IsEnabled="{Binding Path=IsNotEmpty}" Text="{Binding Path=Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Row="3" Grid.Column="2" Text="Memory:" />
                    <ComboBox Grid.Row="4" Grid.Column="2" IsEnabled="{Binding Path=IsNotEmpty}" IsEditable="True" ItemsSource="{Binding Path=GetMemory}" SelectedValue="{Binding Path=SetMemory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Row="3" Grid.Column="4" Text="Planet:" />
                    <ComboBox Grid.Row="4" Grid.Column="4" IsEnabled="{Binding Path=IsNotEmpty}" IsEditable="True" ItemsSource="{Binding Path=GetPlanets}" SelectedValue="{Binding Path=SetPlanet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Description:" />
                    <TextBox Grid.Row="7" Grid.Column="0" IsEnabled="{Binding Path=IsNotEmpty}" Grid.ColumnSpan="5" MaxLength="128" Text="{Binding Path=MapDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="0" Grid.Column="2" Header="Settings">
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="40" Width="1*" />
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition MinWidth="40" Width="1*" />
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition MinWidth="40" Width="1*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Min wind speed:" />
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="0" IsEnabled="{Binding Path=IsNotEmpty}" Minimum="0" Increment="1" Value="{Binding Path=MinWindSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Tidal strength:" />
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="2" IsEnabled="{Binding Path=IsNotEmpty}" Minimum="0" Increment="1" Value="{Binding Path=TidalStrength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Row="0" Grid.Column="4" Text="Gravity:" />
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="4" IsEnabled="{Binding Path=IsNotEmpty}" Minimum="0" Increment="1" Value="{Binding Path=Gravity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Max wind speed:" />
                    <xctk:IntegerUpDown Grid.Row="4" Grid.Column="0" IsEnabled="{Binding Path=IsNotEmpty}" Minimum="0" Increment="1" Value="{Binding Path=MaxWindSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Row="3" Grid.Column="2" Text="Solar strength:" />
                    <xctk:IntegerUpDown Grid.Row="4" Grid.Column="2" IsEnabled="{Binding Path=IsNotEmpty}" Minimum="0" Increment="1" Value="{Binding Path=SolarStrength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <CheckBox Grid.Row="6" Grid.Column="0" IsEnabled="{Binding Path=IsNotEmpty}" IsChecked="{Binding Path=ImpassableWater, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Impassable water</CheckBox>
                    <CheckBox Grid.Row="6" Grid.Column="2" IsEnabled="{Binding Path=IsNotEmpty}" IsChecked="{Binding Path=WaterDoesDamage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Water does damage</CheckBox>
                    <xctk:IntegerUpDown Grid.Row="6" Grid.Column="4" IsEnabled="{Binding Path=WaterDoesDamage}" Minimum="-100" Maximum="100" Increment="1" Value="{Binding Path=WaterDamage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Header="Schemas">
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="60" Width="2*" MaxWidth="550" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                        <ComboBox Name="cmbxSchemas" Margin="0,0,20,0" MinWidth="80" IsEnabled="{Binding Path=IsNotEmpty, Mode=OneWay}" ItemsSource="{Binding Path=GetSchemas, Mode=OneWay}" SelectedIndex="{Binding Path=SelectedSchema}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{Binding GetName}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Button Margin="0,0,15,0" Width="75" Command="{Binding AddSchemaCommand}">Add</Button>
                        <Button Width="75" Command="{Binding RemoveSchemaCommand}">Remove</Button>
                    </StackPanel>

                    <Grid Grid.Row="2" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="20" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="15" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="15" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="15" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="15" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Type:" />
                        <ComboBox Grid.Row="1" Grid.Column="0" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" ItemsSource="{Binding Path=GetSchemaTypes, Mode=OneWay}" SelectedValue="{Binding Path=Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="3" Text="AI profile:" />
                        <ComboBox Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="3" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" IsEditable="True" ItemsSource="{Binding Path=GetAiProfiles, Mode=OneWay}" Text="{Binding Path=AiProfile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Surface metal:" />
                        <xctk:IntegerUpDown Grid.Row="4" Grid.Column="0" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" Minimum="0" Increment="1" Value="{Binding Path=SurfaceMetal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Moho metal:" />
                        <xctk:IntegerUpDown Grid.Row="7" Grid.Column="0" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" Minimum="0" Increment="1" Value="{Binding Path=MohoMetal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="3" Grid.Column="2" Text="Human metal:" />
                        <xctk:IntegerUpDown Grid.Row="4" Grid.Column="2" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" Minimum="0" Increment="1" Value="{Binding Path=HumanMetal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Row="6" Grid.Column="2" Text="Computer metal:" />
                        <xctk:IntegerUpDown Grid.Row="7" Grid.Column="2" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" Minimum="0" Increment="1" Value="{Binding Path=ComputerMetal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="3" Grid.Column="4" Text="Human energy:" />
                        <xctk:IntegerUpDown Grid.Row="4" Grid.Column="4" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" Minimum="0" Increment="1" Value="{Binding Path=HumanEnergy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Row="6" Grid.Column="4" Text="Computer energy:" />
                        <xctk:IntegerUpDown Grid.Row="7" Grid.Column="4" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" Minimum="0" Increment="1" Value="{Binding Path=ComputerEnergy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <GroupBox Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="5" Header="Weapon">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="80" Width="1*" />
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition MinWidth="40" Width="1*" />
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition MinWidth="40" Width="1*" />
                                </Grid.ColumnDefinitions>

                                <CheckBox Grid.Row="1" Grid.Column="0" IsEnabled="{Binding Path=IsSchemaActive, Mode=OneWay}" IsChecked="{Binding Path=UseWeapon}">Use weapon</CheckBox>
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Weapon:" />
                                <ComboBox Grid.Row="4" Grid.Column="0" IsEnabled="{Binding Path=UseWeapon}" ItemsSource="{Binding Path=GetWeapons}" SelectedValue="{Binding Path=SetWeapon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock Grid.Row="0" Grid.Column="2" Text="Radius:" />
                                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="2" Minimum="0" Increment="1" IsEnabled="{Binding Path=UseWeapon}" Value="{Binding Path=Radius, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Grid.Row="3" Grid.Column="2" Text="Density:" />
                                <xctk:SingleUpDown Grid.Row="4" Grid.Column="2" Minimum="0" Increment=".1" FormatString="F1" IsEnabled="{Binding Path=UseWeapon}" Value="{Binding Path=Density, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Grid.Row="0" Grid.Column="4" Text="Duration:" />
                                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="4" Minimum="0" Increment="1" IsEnabled="{Binding Path=UseWeapon}" Value="{Binding Path=Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Grid.Row="3" Grid.Column="4" Text="Interval:" />
                                <xctk:IntegerUpDown Grid.Row="4" Grid.Column="4" Minimum="0" Increment="1" IsEnabled="{Binding Path=UseWeapon}" Value="{Binding Path=Interval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </GroupBox>
                    </Grid>

                    <control:SchemaItemView Grid.Row="2" Grid.Column="2" />
                </Grid>
            </GroupBox>
        </Grid>
        <StatusBar Grid.Row="3" Visibility="{Binding Path=GetStatusBarVisibility, Mode=OneWay}">
            <StatusBarItem>
                <TextBlock Text="{Binding Path=GetStatusBarText, Mode=OneWay}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
